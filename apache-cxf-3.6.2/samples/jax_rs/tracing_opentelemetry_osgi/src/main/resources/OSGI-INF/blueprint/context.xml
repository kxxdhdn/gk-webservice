<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!-- START SNIPPET: blueprint -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://cxf.apache.org/blueprint/core"
       xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"

       xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                           http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
                           http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

    <!-- JAXRS providers -->
    <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.jsrjsonp.JsrJsonpProvider" />

    <bean id="tracingFeature" class="org.apache.cxf.tracing.opentelemetry.jaxrs.OpenTelemetryFeature">
        <argument index="0">
            <bean factory-ref="withPropagators" factory-method="build"/>
        </argument>
        <argument index="1" value="tracer" />
    </bean>

    <bean id="openTelemetrySdk" class="io.opentelemetry.sdk.OpenTelemetrySdk" factory-method="builder" />
    <bean id="sdkTracerProvider" class="io.opentelemetry.sdk.trace.SdkTracerProvider" factory-method="builder" />

    <bean id="withSampler" factory-ref="sdkTracerProvider" factory-method="setSampler">
        <argument index="0">
            <bean class="io.opentelemetry.sdk.trace.samplers.Sampler" factory-method="alwaysOn" />
        </argument>
    </bean>

    <bean id="processor" class="io.opentelemetry.sdk.trace.export.BatchSpanProcessor" factory-method="builder">
        <argument index="0">
            <bean class="io.opentelemetry.exporter.logging.LoggingSpanExporter" factory-method="create" />
        </argument>
    </bean>

    <bean id="withSpanProcessor" factory-ref="sdkTracerProvider" factory-method="addSpanProcessor">
        <argument index="0">
            <bean factory-ref="processor" factory-method="build"/>
        </argument>
    </bean>

    <bean id="withTracerProvider" factory-ref="openTelemetrySdk" factory-method="setTracerProvider">
        <argument index="0">
            <bean factory-ref="withSpanProcessor" factory-method="build"/>
        </argument>
    </bean>

    <bean id="withPropagators" factory-ref="withTracerProvider" factory-method="setPropagators">
        <argument index="0">
            <bean class="io.opentelemetry.context.propagation.ContextPropagators" factory-method="create">
                <argument index="0">
                    <bean class="io.opentelemetry.api.trace.propagation.W3CTraceContextPropagator" factory-method="getInstance" /> 
                </argument>
            </bean>
        </argument>
    </bean>

    <!-- Application resources -->
    <bean id="catalogResource" class="demo.jaxrs.tracing.server.Catalog" />

    <cxf:bus>
        <cxf:features>
            <cxf:logging />
        </cxf:features>
    </cxf:bus>

    <jaxrs:server id="catalogServer" address="/">
        <jaxrs:serviceBeans>
            <ref component-id="catalogResource" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <ref component-id="jsonProvider" />
            <ref component-id="tracingFeature" />
        </jaxrs:providers>
    </jaxrs:server>

</blueprint>
<!-- END SNIPPET: blueprint -->
